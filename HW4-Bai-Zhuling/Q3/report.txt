Section A
1.
	RandomForest -P 100 -I 100 -num-slots 1 -K 0 -M 1.0 -V 0.001 -S 1
	Time taken to build model: 0.06 seconds
	Overall accuracy: 86.6769%
	Confusion Matrix:
	   a   b   <-- classified as
	 316  41 |   a = 0
	  46 250 |   b = 1

2.
	Logistic -R 1.0E-8 -M -1 -num-decimal-places 4
	Time taken to build model: 0.05 seconds
	Overall accuracy: 86.3706%
	Confusion Matrix:
           a   b   <-- classified as
	 302  55 |   a = 0
	  34 262 |   b = 1

3.
	MultilayerPerceptron -L 0.3 -M 0.2 -N 500 -V 0 -S 0 -E 20 -H a
	Time taken to build model: 4.82 seconds
	Overall accuracy: 83.3078%
	Confusion Matrix:
	   a   b   <-- classified as
 	 298  59 |   a = 0
          50 246 |   b = 1

4.
	SGD -F 0 -L 0.01 -R 1.0E-4 -E 500 -C 0.001 -S 1
	Time taken to build model: 0.08 seconds
	Overall accuracy: 85.9112%
	Confusion Matrix:
	   a   b   <-- classified as
	 286  71 |   a = 0
	  21 275 |   b = 1

5.
	HoeffdingTree -L 2 -S 1 -E 1.0E-7 -H 0.05 -M 0.01 -G 200.0 -N 0.0
	Time taken to build model: 0.03 seconds
	Overall accuracy: 85.1455%
	Confusion Matrix:
	   a   b   <-- classified as
	 277  80 |   a = 0
	  17 279 |   b = 1

Section B:
1a.
	I modified numIterations from 100 to 400
	Runtime increased by 0.2 second. 
	Overall accuracy increased to 86.9832%
	Confusion Matrix changed to:
	   a   b   <-- classified as
	 315  42 |   a = 0
	  43 253 |   b = 1
	It was because increased the number of iterations the total operation time would be increased and the classification would be more accurate.

1b.
	I modified maxlts from -1 to -5
	Runtime decreased by 0.05 second.
	Overall accuracy decreased to 54.6708% 
	Confusion matrix changed to:
	   a   b   <-- classified as
	 357   0 |   a = 0
	 296   0 |   b = 1
	
	It was because maximum number of iterations gets smaller.

1c.
	I modified learningRate from 0.03 to 0.06
	Runtime decreased by 0.06 second.
	Overall accuracy increased to 84.6861% 
	Confusion matrix changed to:
	   a   b   <-- classified as
	 308  49 |   a = 0
	  51 245 |   b = 1	
	It was because learningRate becomes higher.

1d.
	I modified learningRate from 0.01 to 0.06
	Runtime decreased by 0.04 second.
	Overall accuracy decreased to 85.4518% 
	Confusion matrix changed to:
	   a   b   <-- classified as
	 295  62 |   a = 0
	  33 263 |   b = 1	
	It was because 	learningRate becomes higher.

1e.
	I modified hoeffdingTieThreshold from 0.05 to 0.2
	Runtime decreased by 0.02 second.
	Overall accuracy decreased to 81.1639% 
	Confusion matrix changed to:
	   a   b   <-- classified as
	 289  68 |   a = 0
	  55 241 |   b = 1	
	It was because threshold below which a split will be forced to break ties. Threshold becomes higher, the split value will be less accurate.

2. My best accuracy is 83.77%. I use maximum information gain to split and stop when the labels in the subset are the same or information gain is 0.Different ways to choose spliting attributes and different criteria to stop splitting results in different accuracy.

3. Choose RandomForest. Because RandomForest gets the highest accuracy and its running time is small.